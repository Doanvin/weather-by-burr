{"version":3,"sources":["bundle.min.js"],"names":["getJson","url","callback","xhr","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","send","setWeatherUrl","queryText","undefined","replace","getWeatherItem","search_query","parseWeatherItem","o","results","JSON","parse","query","channel","city","location","state","region","country","current","item","condition","forecasts","forecast","setWeatherCurrent","setWeatherForecast","document","getElementsByClassName","innerHTML","imgSrc","setImgSrc","code","temp","text","numForecasts","length","forecastHtml","i","day","high","low","forecastClass","forecastClearfix","forecastTitle","classList","contains","remove","weatherCodes","getZipCode","json","zip_code","e","getWeatherByIp","setIframeSrc","iframeSrcs","iframes","getElementsByTagName","src","windowLoad","addEventListener","event","preventDefault","keyCode","click","window","setTimeout"],"mappings":"AAAA,aAEA,SAASA,QAAQC,EAAKC,GAElB,IAAIC,EAAM,IAAIC,eACdD,EAAIE,mBAAqB,WACsBH,EAAzB,GAAlBC,EAAIG,YAAiC,KAAdH,EAAII,OAAyBJ,EAAIK,kBAE5DL,EAAIM,KAAK,MAAOR,GAAK,GACrBE,EAAIO,KAAK,MAGb,SAASC,cAAcC,GAKnB,IAEIX,EAFW,wLAH8BW,OAA/BC,IAAdD,GAAwC,IAAbA,EAA8B,WAAyBA,EAAUE,QAAQ,IAAK,OAAOA,QAAQ,IAAK,QAIhH,wEAGb,OADAb,EAAMA,EAAIa,QAAQ,IAAK,IAK3B,SAASC,eAAeC,GAGpBhB,QAFUW,cAAcK,GAEXC,kBAIjB,SAASA,iBAAiBC,GAGtB,IACIC,EADOC,KAAKC,MAAMH,GACHI,MAAMH,QAAQI,QAC7BC,EAAOL,EAAQM,SAASD,KACxBE,EAAQP,EAAQM,SAASE,OACzBC,EAAUT,EAAQM,SAASG,QAC3BC,EAAUV,EAAQW,KAAKC,UACvBC,EAAYb,EAAQW,KAAKG,SAC7BC,kBAAkBV,EAAME,EAAOE,EAASC,GACxCM,mBAAmBH,GAGvB,SAASE,kBAAkBV,EAAME,EAAOE,EAASC,GAG9BO,SAASC,uBAAuB,qBAAqB,GAC3DC,UAAYd,EAAO,KAAOE,EAEnC,IAAIa,EAASC,UAAUX,EAAQY,MAEfL,SAASC,uBAAuB,sBAAsB,GAC5DC,UAAY,6DAA+DC,EAAS,sBAA6BV,EAAQa,KAAO,eAAiBb,EAAQc,KAGvK,SAASR,mBAAmBH,GAKxB,IAAK,IAFDY,EAAeZ,EAAUa,OACzBC,EAAe,GACVC,EAAI,EAAGA,EAAIH,EAAcG,IAAK,CACnC,IAAIC,EAAMhB,EAAUe,GAAGC,IACnBC,EAAOjB,EAAUe,GAAGE,KACpBC,EAAMlB,EAAUe,GAAGG,IACnBP,EAAOX,EAAUe,GAAGJ,KACpBJ,EAASC,UAAUR,EAAUe,GAAGN,MAChCU,EAAgB,GAChBC,EAAmB,GAEnBL,EAAI,GAAK,GAAW,IAANA,GAAiB,IAANA,EACzBK,EAAmB,gDACP,GAALL,GAAe,GAALA,IACjBK,EAAmB,kEAGd,GAALL,GAAe,GAALA,EACVI,EAAgB,mBACJ,GAALJ,EACPK,EAAmB,iEACP,GAALL,IACPI,EAAgB,oDAEpBL,GAAgB,sCAAwCK,EAAgB,0DAA4DH,EAAM,uCAAyCC,EAAO,iBAAmBC,EAAM,8FAAgGX,EAAS,2CAA6CI,EAAO,mBAAqBS,EAIzY,IAAIC,EAAgBjB,SAASC,uBAAuB,2BAA2B,GAC3EgB,EAAcC,UAAUC,SAAS,WACjCF,EAAcC,UAAUE,OAAO,UAIjBpB,SAASC,uBAAuB,2BAA2B,GACjEC,UAAYQ,EAG5B,SAASN,UAAUC,GAGf,IAAIgB,GAAgB,QAAS,SAAU,eAAgB,cAAe,gBAAiB,qBAAsB,UAAW,eAAgB,gBAAiB,OAAQ,OAAQ,QAYzK,OAXoBA,EAAa,GACjCA,EAAa,GAAIA,EAAa,GAAIA,EAAa,GAAIA,EAAa,GAAIA,EAAa,IACjFA,EAAa,GAAIA,EAAa,IAAKA,EAAa,GAAIA,EAAa,GAAIA,EAAa,GAClFA,EAAa,GAAIA,EAAa,GAAIA,EAAa,IAAKA,EAAa,IAAKA,EAAa,IACnFA,EAAa,IAAKA,EAAa,GAAIA,EAAa,GAAIA,EAAa,GAAIA,EAAa,GAClFA,EAAa,GAAIA,EAAa,GAAIA,EAAa,GAAIA,EAAa,GAAIA,EAAa,GACjFA,EAAa,GAAIA,EAAa,GAAIA,EAAa,GAAIA,EAAa,GAAIA,EAAa,GACjFA,EAAa,IAAKA,EAAa,GAAIA,EAAa,IAAKA,EAAa,GAAIA,EAAa,GACnFA,EAAa,GAAIA,EAAa,GAAIA,EAAa,GAAIA,EAAa,GAAIA,EAAa,GACjFA,EAAa,IAAKA,EAAa,IAAKA,EAAa,IAAKA,EAAa,IAAKA,EAAa,GACrFA,EAAa,IAAKA,EAAa,IACXhB,GAGxB,SAASiB,WAAWC,GAGhB,IAEI5C,eADQK,KAAKC,MAAMsC,GACFC,UACnB,MAAOC,GACL9C,eAAe,UAKvB,SAAS+C,iBAGL9D,QAFU,8BAEG0D,YAGjB,SAASK,eAKL,IAAK,IAHDC,GAAc,4CAA6C,+DAAgE,oFAAqF,gEAChNC,EAAU7B,SAAS8B,qBAAqB,UAEnCnB,EAAI,EAAGA,EAAIkB,EAAQpB,OAAQE,GAAK,EACrCkB,EAAQlB,GAAGoB,IAAMH,EAAWjB,GAIpC,SAASqB,aACLN,iBAGA1B,SAASC,uBAAuB,iBAAiB,GAAGgC,iBAAiB,QAAS,SAAUC,GACpFA,EAAMC,iBACe,IAAjBD,EAAME,SACNpC,SAASC,uBAAuB,kBAAkB,GAAGoC,UAI7DC,OAAOC,WAAWZ,aAAc","file":"bundle.min.js","sourcesContent":["'use strict';\n\nfunction getJson(url, callback) {\n    // Makes requests to an api that returns json\n    var xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = function () {\n        xhr.readyState == 4 && xhr.status == 200 ? callback(xhr.responseText) : callback({});\n    };\n    xhr.open('GET', url, true); // true for asynchronous\n    xhr.send(null);\n}\n\nfunction setWeatherUrl(queryText) {\n    // queryText is value of search input box; Reno, Nv if undefined\n    queryText === undefined || queryText == '' ? queryText = 'Reno, Nv' : queryText = queryText.replace(/,/, '%2C').replace(/ /, '%20');\n\n    // Format url\n    var startUrl = 'https://query.yahooapis.com/v1/public/yql?q=select%20location%2C%20item%20from%20weather.forecast%20where%20woeid%20in%20(select%20woeid%20from%20geo.places(1)%20where%20text%3D%22';\n    var endUrl = '%22)&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys';\n    var url = startUrl + queryText + endUrl;\n    url = url.replace(/\"/, '');\n    return url;\n}\n\n/* exported getWeatherItem */\nfunction getWeatherItem(search_query) {\n    var url = setWeatherUrl(search_query);\n    // Makes async GET request using parseWeatherItem() as a callback.\n    getJson(url, parseWeatherItem);\n}\n\n/* exported parseWeatherItem */\nfunction parseWeatherItem(o) {\n    // Parses returned GET response, o, and extracts\n    // the title, links, and text of each news story.\n    var json = JSON.parse(o);\n    var results = json.query.results.channel;\n    var city = results.location.city;\n    var state = results.location.region;\n    var country = results.location.country;\n    var current = results.item.condition;\n    var forecasts = results.item.forecast;\n    setWeatherCurrent(city, state, country, current);\n    setWeatherForecast(forecasts);\n}\n\nfunction setWeatherCurrent(city, state, country, current) {\n    // Takes parsed weather info and creates a div to be placed in the\n    // .weatherCurrent div. All variables passed in should be strings.\n    var location = document.getElementsByClassName('weather__location')[0];\n    location.innerHTML = city + ', ' + state;\n\n    var imgSrc = setImgSrc(current.code);\n\n    var condition = document.getElementsByClassName('weather__condition')[0];\n    condition.innerHTML = '<img height=\"150px\" width=\"150px\" src=\"assets/img/weather/' + imgSrc + '.png\" /><br/>' + 'It\\'s ' + current.temp + ' &#8457 And ' + current.text;\n}\n\nfunction setWeatherForecast(forecasts) {\n    // Takes parsed weather info and creates a div to be placed in the\n    // .weather__forecast div. forecasts is an array of objects.\n    var numForecasts = forecasts.length;\n    var forecastHtml = '';\n    for (var i = 0; i < numForecasts; i++) {\n        var day = forecasts[i].day;\n        var high = forecasts[i].high;\n        var low = forecasts[i].low;\n        var text = forecasts[i].text;\n        var imgSrc = setImgSrc(forecasts[i].code);\n        var forecastClass = '';\n        var forecastClearfix = '';\n        // Fixes Bug #1 | sets clearfixes\n        if (i % 2 == 1 && i !== 3 && i !== 7) {\n            forecastClearfix = '<div class=\"clearfix visible-xs-block\"></div>';\n        } else if (i == 3 || i == 7) {\n            forecastClearfix = '<div class=\"clearfix visible-xs-block visible-sm-block\"></div>';\n        }\n        // Set responsive classes\n        if (i == 0 || i == 5) {\n            forecastClass = 'col-md-offset-1 ';\n        } else if (i == 4) {\n            forecastClearfix = '<div class=\"clearfix visible-md-block visible-lg-block\"></div>';\n        } else if (i == 8) {\n            forecastClass = 'col-sm-offset-3 col-md-offset-0 col-lg-offset-0 ';\n        }\n        forecastHtml += '<div class=\"weather__forecast-item ' + forecastClass + 'col-xs-6 col-sm-3 col-md-2\"><div class=\"col-xs-12\"><h3>' + day + '</h3></div><div class=\"col-xs-6\"><p>' + high + ' &#8457</p><p>' + low + ' &#8457</p></div><div class=\"col-xs-6\"><img class=\"img-responsive\" src=\"assets/img/weather/' + imgSrc + '.png\" /></div><div class=\"col-xs-12\"><p>' + text + '</p></div></div>' + forecastClearfix;\n    }\n\n    // Add hidden class to hide padding weather__forecast-title div\n    var forecastTitle = document.getElementsByClassName('weather__forecast-title')[0];\n    if (forecastTitle.classList.contains('hidden')) {\n        forecastTitle.classList.remove('hidden');\n    }\n\n    // Insert forecastDiv into the html page\n    var forecastDiv = document.getElementsByClassName('weather__forecast-boxes')[0];\n    forecastDiv.innerHTML = forecastHtml;\n}\n\nfunction setImgSrc(code) {\n    // Takes interger code from yahoo weather (0-47) and returns text to be used\n    // for img src.  https://developer.yahoo.com/weather/documentation.html#codes\n    var weatherCodes = ['Sunny', 'Cloudy', 'MostlyCloudy', 'CloudyNight', 'Thunderstorms', 'ThunderstormsNight', 'Drizzle', 'DrizzleNight', 'SlightDrizzle', 'Haze', 'Moon', 'Snow'];\n    var yahooWeather = [weatherCodes[5], // 0\n    weatherCodes[5], weatherCodes[5], weatherCodes[5], weatherCodes[5], weatherCodes[11], // 5\n    weatherCodes[6], weatherCodes[11], weatherCodes[6], weatherCodes[6], weatherCodes[6], // 10\n    weatherCodes[8], weatherCodes[6], weatherCodes[11], weatherCodes[11], weatherCodes[11], // 15\n    weatherCodes[11], weatherCodes[7], weatherCodes[7], weatherCodes[0], weatherCodes[9], // 20\n    weatherCodes[9], weatherCodes[9], weatherCodes[9], weatherCodes[9], weatherCodes[1], // 25\n    weatherCodes[1], weatherCodes[3], weatherCodes[2], weatherCodes[3], weatherCodes[2], // 30\n    weatherCodes[10], weatherCodes[0], weatherCodes[10], weatherCodes[2], weatherCodes[7], // 35\n    weatherCodes[0], weatherCodes[4], weatherCodes[4], weatherCodes[8], weatherCodes[8], // 40\n    weatherCodes[11], weatherCodes[11], weatherCodes[11], weatherCodes[11], weatherCodes[4], // 45\n    weatherCodes[11], weatherCodes[4]];\n    return yahooWeather[code];\n}\n\nfunction getZipCode(json) {\n    // Parses response from request and returns zip code\n\n    try {\n        var o = JSON.parse(json);\n        getWeatherItem(o.zip_code);\n    } catch (e) {\n        getWeatherItem('89503');\n    }\n}\n\n/* exported getWeatherByIp */\nfunction getWeatherByIp() {\n    var url = 'https://freegeoip.net/json/';\n    // Makes async GET request using getCityState() as a callback.\n    getJson(url, getZipCode);\n}\n\nfunction setIframeSrc() {\n    // Sets the src attribute of YouTube iframes after the page has loaded\n    var iframeSrcs = ['https://www.youtube.com/embed/S9ZSzuj1UpA', 'https://www.youtube.com/embed/FR7YnNM6IXA?list=RDFR7YnNM6IXA', 'https://www.youtube.com/embed/8fo4STfDlZk?list=PLJMuYl1_E0hehY29rF1_p1UAOaxo_1S49', 'https://www.youtube.com/embed/x9iYvyffAh4?list=RDGAlU9nVnFx8'];\n    var iframes = document.getElementsByTagName('iframe');\n\n    for (var i = 0; i < iframes.length; i += 1) {\n        iframes[i].src = iframeSrcs[i];\n    }\n}\n/* exported windowLoad */\nfunction windowLoad() {\n    getWeatherByIp();\n\n    // Creates event listener on search input. Pressing enter clicks search.\n    document.getElementsByClassName('search__input')[0].addEventListener('keyup', function (event) {\n        event.preventDefault();\n        if (event.keyCode == 13) {\n            document.getElementsByClassName('search__button')[0].click();\n        }\n    });\n\n    window.setTimeout(setIframeSrc, 1000);\n}\n//# sourceMappingURL=bundle.js.map\n"]}